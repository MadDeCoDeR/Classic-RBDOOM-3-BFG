name: Cache Linux

on:
    workflow_call:
        inputs:
            build_type:
                required: true
                type: string


jobs:
    linux-build:
        runs-on: ubuntu-latest
    
        steps:
        - uses: actions/checkout@v5
          id: step1
          with:
            submodules: recursive
            ref: master
    
        - name: Cache linux vcpkg
          id: step5
          uses: actions/cache@v4
          with: 
              path: ${{github.workspace}}/build/vcpkg_installed
              key: ${{runner.os}}-vcpkg-${{hashfiles('neo/linux-status')}}
              restore-keys: |
                ${{ runner.OS }}-vcpkg-
    
    
        - if: ${{ steps.step5.outputs.cache-hit != 'true' }}
          name: Configure CMake
          id: step6
          env:
            CC: gcc-13
            CXX: g++-13
          working-directory: ${{github.workspace}}/neo
          run: |
            sudo apt-get update
            sudo apt-get install -y build-essential autoconf libtool cmake libglu1-mesa-dev freeglut3-dev mesa-common-dev libxmu-dev libxi-dev libgl-dev libx11-dev libxft-dev libxext-dev nasm libwayland-dev libxkbcommon-dev libegl1-mesa-dev libdecor-0-dev libxrandr-dev libxxf86vm-dev libx11-xcb-dev libxcb-dri2-0-dev libxcb-glx0-dev libxcb-icccm4-dev libxcb-keysyms1-dev libxcb-randr0-dev python3-jinja2 libltdl-dev bison
            cmake -B ${{github.workspace}}/build --preset=linux-${{inputs.build_type}}
    
        - name: Save logs - VCPKG
          if: ${{ failure() }}
          uses: actions/upload-artifact@v4
          with:
              name: vcpkg-linux-logs
              path: ${{github.workspace}}/vcpkg/buildtrees/*/*.log