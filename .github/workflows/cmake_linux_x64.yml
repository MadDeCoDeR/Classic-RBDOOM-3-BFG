name: Build Linux

on:
    workflow_call:
        inputs:
            build_type:
                required: true
                type: string
            version:
                required: true
                type: string


jobs:
    linux-build:
        runs-on: ubuntu-latest
    
        steps:
        - uses: actions/checkout@v3
          id: step1
          with:
            submodules: recursive
    
        - uses: actions/checkout@v3
          id: step2
          with:
            repository: MadDeCoDeR/BFA-Assets
            path: BFA_Assets
    
        - name: Download Depedencies
          id: step4
          run: sudo apt-get install -y build-essential cmake libglu1-mesa-dev freeglut3-dev mesa-common-dev libxmu-dev libxi-dev libgl-dev libx11-dev libxft-dev libxext-dev nasm libwayland-dev libxkbcommon-dev libegl1-mesa-dev libdecor-0-dev libxrandr-dev libxxf86vm-dev libx11-xcb-dev libxcb-dri2-0-dev libxcb-glx0-dev libxcb-icccm4-dev libxcb-keysyms1-dev libxcb-randr0-dev python3-jinja2
    
        - name: Cache linux vcpkg
          id: step5
          uses: actions/cache@v3
          with: 
              path: ${{github.workspace}}/build/vcpkg_installed
              key: ${{runner.os}}-vcpkg-${{hashfiles('neo/linux-status')}}
              restore-keys: |
                ${{ runner.OS }}-vcpkg-
    
    
        - name: Configure CMake
          id: step6
          working-directory: ${{github.workspace}}/neo
          run: cmake -B ${{github.workspace}}/build --preset=linux-${{inputs.build_type}}
    
        - name: Build
          id: step7
          run: cmake --build ${{github.workspace}}/build --parallel=16
          
        - name: Archive production artifacts
          id: step8
          uses: ./.github/actions/upload_artifact
          with:
            artifact_name: linux-${{inputs.version}}-${{inputs.build_type}}
            executable_path: ./build/DoomBFA
            vcpkg_triplet: x64-linux
    
        - name: Configure CMake Debug
          id: step9
          working-directory: ${{github.workspace}}/neo
          run: cmake -B ${{github.workspace}}/build --preset=linux-relwithdebuginfo
    
        - name: Build Debug
          id: step10
          # Build your program with the given configuration
          run: cmake --build ${{github.workspace}}/build --parallel=16
          
        - name: Archive debug artifacts
          id: step11
          uses: ./.github/actions/upload_artifact
          with:
            artifact_name: linux-${{inputs.version}}-debug
            executable_path: ./build/DoomBFA
            vcpkg_triplet: x64-linux